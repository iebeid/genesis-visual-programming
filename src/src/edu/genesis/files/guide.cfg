label = Connector
format = none  
toolTip = Connects two graphical objects 
action = 0
image = edu/genesis/assets/connector.jpg
class = none  

label =  LetName
format =  Let _StickyNote_ name _expression_ \n 
toolTip = Label a value
action = 1
image = edu/genesis/assets/stickynote.jpg
class = edu.genesis.components.LetNameDialog

label =  LetAlias
format =  Let _StickyNote_ alias _expression_ \n
toolTip = Alias a value
action = 2
image = edu/genesis/assets/alias.jpg
class = edu.genesis.components.LetAliasDialog

label =  Unalias
format =  unalias _StickyNote_ \n 
toolTip = Erase an alias
action = 3
image = edu/genesis/assets/Unalias.jpg
class = edu.genesis.components.UnaliasDialog

label =Select
format =Select\n    _cond_ -> { _step_ }\n
toolTip =Select statements to execute
action = 4
image = edu/genesis/assets/select.jpg
class = edu.genesis.components.SelectDialog

label =  Generate
format =  Generate each (_iterator_) from _list_  \n
toolTip = Generate elements from a list
action = 5
image = edu/genesis/assets/generate.jpg
class = edu.genesis.components.GenerateDialog

label =  gListWhile
format =  Generate each (_iterator_) from _L_ while _cond_ \n   # no Task\n
toolTip = Generate while condition is true
action = 6
image = none
class = none

label =  gListUntil
format =  Generate each (_iterator_) from _L_ until _cond_ \n    # no Task\n
toolTip = Generate until condition is true
action = 7
image = none
class = none

label =  gFromToBy
format =  Generate each (_iterator_) from _#_ to _#_ by _#_ \n 
toolTip = Generate from a sequence
action = 8
image = none
class = none

label =  Task
format =  [+] _condition_\n   @first: { _first_ }\n   @iter: { _iteration_ } \n   @last: { _last_ }\n
toolTip = General task
action = 9
image = edu/genesis/assets/task.jpg
class = edu.genesis.components.TaskDialog


label =  tPrint
format =  [+] _condition_ \n   @i: Print _iterator_ \n 
toolTip = Print list values
action = 10
image = none
class = none

label =  tCount
format =  [+] _condition_ \n   @f: Let _count_ name 0 \n   @i: Let _count_ name _count_ + 1 \n 
toolTip = Count list elements
action = 11
image =  none
class = none

label =  tModify
format =  [+] _when condition_  \n   @i: { Let _iterator_ name _expression_ } \n 
toolTip = Modify List
action = 12
image =  none
class = none

label =  tSum
format =  [+] _when condition_ \n   @f: Let _var_ name _0_ \n   @i: Let _var_ name _var_  + _expression_  \n 
toolTip = Sum list elements
action = 13
image = none
class = none

label =  tSmallest
format =  [+] when ( _iterator_ < _smallest_)\n   @f: Let _smallest_ name _L[1]_ \n   @i: Let _smallest_ name _iterator_ \n 
toolTip = Find smallest list element
action = 14
image = none
class = none

label =  tLargest
format =  [+] when ( _iterator_ < _smallest_)\n   @f: Let _largest_ name _L[1]_ \n   @i: Let _largest_ name _iterator_ \n 
toolTip = Find largest list element
action = 15
image = none
class = none


label =  tBuild
format =  [+] _when condition_ \n   @f: Let _NewList_ name <> \n   @i: Append _iterator_ onto _NewList_ \n 
toolTip = Copy list
action = 16
image = none
class = none

label =Block
format ={\n  _Step_ \n  _Step_ \n} \n
toolTip = Code Block
action = 17
image = edu/genesis/assets/block.jpg
class = edu.genesis.components.BlockDialog

label =Stop
format =Stop \n
toolTip = Stop
action = 18
image = edu/genesis/assets/stop.jpg
class = edu.genesis.components.StopDialog

label =Define Function
format =Let _function_ (_parameter_) name function {\n _algorithm_ \n Return _ans_\n} \n 
toolTip =New Function 
action = 19
image = edu/genesis/assets/function.jpg
class = edu.genesis.components.FunctionDialog

label =Define Procedure
format =Let _procedure_ name procedure {\n _algorithm_ \n} \n 
toolTip = New Procedure 
action = 20
image = edu/genesis/assets/procedure.jpg
class = edu.genesis.components.ProcedureDialog

